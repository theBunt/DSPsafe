@model IEnumerable<DSPsafe.Models.Incident>


@{
    ViewBag.Title = "Incidents";
}

@section Amcharts {
    @Scripts.Render("~/amcharts/amcharts.js")
    @Scripts.Render("~/amcharts/serial.js")
    @Scripts.Render("~/amcharts/pie.js")
    @Scripts.Render("~/amcharts/plugins/dataloader/dataloader.min.js")
}

<h2>Incident Report Page</h2>

@*<p>
    @Html.ActionLink("Create New", "Create")
</p>*@



@*<div>
         @Html.Partial("_incidentTable", Model.AsEnumerable())
    </div>*@

@if (User.IsInRole("Manager"))
{

    <button id="tableBtn" type="button" class="btn btn-info btn-block" onclick="viewTable()">CLICK HERE to view Table of Incidents</button>
    <br />


    <div id="IncTable" hidden>
        @using (Html.BeginForm("Index", "Incidents", FormMethod.Get))
        {
            <p>
                @*@Html.DropDownList("searchStringRegion", "Select region...")*@
                @Html.DropDownList("searchStringRegion", (IEnumerable<SelectListItem>)ViewBag.Region, "Choose region...", new { @class = "form-control" }) <br />

                @*@Html.DropDownList("searchStringType", "Select type...")*@
                @Html.DropDownList("searchStringType", (IEnumerable<SelectListItem>)ViewBag.Type, "Choose type...", new { @class = "form-control" }) <br />

                <input type="submit" value="Search" />
            </p>
            @*@if (TempData["Error"] != null)
                    {
                <p style="color:red">@TempData["Error"]</p>

                }*@

        }

        <table id="IncidentTable " class="table">
            <tr>
                <th>

                    @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSort })
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.WhereHappened.Region)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TypeOfIncident)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.StaffIncident)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.HomeVisitIncident)
                </th>

                <th>

                    @Html.ActionLink("Date", "Index", new { sortOrder = ViewBag.DateSort })
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.StaffReportee.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.WhereHappened.Region)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TypeOfIncident)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StaffIncident)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.HomeVisitIncident)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.DateOccurred)
                    </td>
                    <td>
                        @*@Html.ActionLink("Edit", "Edit", new { id = item.IncidentId }) |*@
                        @Html.ActionLink("Details", "Details", new { id = item.IncidentId })
                        @*@Html.ActionLink("Delete", "Delete", new { id = item.IncidentId })*@
                    </td>
                </tr>
            }

        </table>

        <input type="hidden" name="theURL" value="">
        @*@Html.ActionLink("Print", "DownloadPartialViewPDF", new { sortOrder = ViewBag.DateSort, searchStringRegion = ViewBag.Region, searchStringType  = ViewBag.type})*@
        @Html.ActionLink("Export to Excel", "ExportData", new { sortOrder = ViewBag.DateSort, searchStringRegion = ViewBag.Region, searchStringType = ViewBag.type })
    </div>
}

<div class="row">
    <div class="col-sm-8">
        <div id="chartdiv" style="width: 640px; height: 400px;" hidden></div>
        <button id="pieBtn" type="button" class="btn btn-info btn-block" onclick="viewPie()">CLICK HERE to view Incidents Pie Chart</button>

    </div>
</div>
<br />
<div class="row">
    <div class="col-sm-8">
        <div id="chartRegion" style="width: 640px; height: 400px;" hidden></div>
        <button id="barBtn" type="button" class="btn btn-info btn-block" onclick="viewBar()">CLICK HERE to view Regional Breakdown Chart</button>

    </div>
</div>
<br />

@section Scripts
        {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#Region").change(function () {
                $("#Building").empty();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBuildings")',
                    dataType: 'json',
                    data: { region: $("#Region").val() },
                    success: function (buildingList) {

                        $.each(buildingList, function (i, locale) {
                            $("#Building").append('<option value ="'
                            + locale.LocationId + '">'
                                + locale.Building + ' </option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}

<script>
    function getUrl() {
        var x = document.URL;
        $('theURL').val(x);
    }
</script>

@*<script type="text/javascript">
        AmCharts.makeChart("chartdiv",
            {
                "type": "pie",
                "balloonText": "[[title]]<br><span style='font-size:14px'><b>[[value]]</b> ([[percents]]%)</span>",
                "titleField": "typeInc",
                "valueField": "countOf",
                "allLabels": [],
                "balloon": {},
                "legend": {
                    "enabled": true,
                    "align": "center",
                    "markerType": "circle"
                },
                "titles": [],
                "dataLoader": {
                    "url": '@Url.Action("GetData")',
                    "format": "json"
                }
            }
        );
    </script>*@

<script type="text/javascript">
    @*AmCharts.makeChart("chartRegion",
                {
                    "type": "serial",
                    "categoryField": "category",
                    "startDuration": 1,
                    "theme": "default",
                    "categoryAxis": {
                        "classNameField": "[[Region]]",
                        "gridPosition": "start",
                        "fillAlpha": 0.02,
                        "gridAlpha": 0.01,
                        "title": "Breakdown of Incidents by Region"
                    },
                    "trendLines": [],
                    "graphs": [
                        {
                            "balloonText": "[[title]] :[[value]]",
                            "fillAlphas": 1,
                            "id": "AmGraph-1",
                            "title": "Assault",
                            "type": "column",
                            "valueField": "countAssault"
                        },
                        {
                            "balloonText": "[[title]] :[[value]]",
                            "fillAlphas": 1,
                            "id": "AmGraph-2",
                            "title": "Threat",
                            "type": "column",
                            "valueField": "countThreat"
                        },
                        {
                            "balloonText": "[[title]] :[[value]]",
                            "fillAlphas": 1,
                            "id": "AmGraph-3",
                            "title": "Slip",
                            "type": "column",
                            "valueField": "countSlip"
                        },
                        {
                            "balloonText": "[[title]] :[[value]]",
                            "fillAlphas": 1,
                            "id": "AmGraph-4",
                            "title": "Manual Handling",
                            "type": "column",
                            "valueField": "countManual"
                        },
                        {
                            "balloonText": "[[title]] :[[value]]",
                            "fillAlphas": 1,
                            "fillColors": "#9400D3",
                            "id": "AmGraph-6",
                            "title": "Damage",
                            "type": "column",
                            "valueField": "countDamage"
                        }
                    ],
                    "guides": [],
                    "valueAxes": [
                        {
                            "id": "ValueAxis-1",
                            "stackType": "regular",
                            "title": "Incidents"
                        }
                    ],
                    "allLabels": [],
                    "balloon": {
                        "animationDuration": 0.34,
                        "fadeOutDuration": 0.26,
                        "fillAlpha": 0.96
                    },
                    "legend": {
                        "enabled": true,
                        "useGraphSettings": true
                    },
                    "titles": [
                        {
                            "alpha": 0,
                            "id": "Title-1",
                            "size": 15,
                            "text": "Breakdown of incidents"
                        }
                    ],
                    "dataLoader": {
                        "url": '@Url.Action("GetBreakdown")',
                        "format": "json"
                    }
                }
            );*@
</script>
