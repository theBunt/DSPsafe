@model DSPsafe.Models.Incident

@{
    ViewBag.Title = "Report";
}

<h2>Report your incident</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Incident</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfIncident, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                
                @Html.DropDownList("TypeOfIncident", null, htmlAttributes: new { @class = "form-control" })
               
                @*@Html.EditorFor(model => model.TypeOfIncident, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.TypeOfIncident, "", new { @class = "text-danger" })
            </div>
            <div class="glyphicon">Logo</div>
        </div>

        <div class="form-group">
            @Html.Label("Select your region", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("Region", null, htmlAttributes: new { @class = "form-control" })

                @*@Html.EditorFor(model => model.TypeOfIncident, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.TypeOfIncident, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Select your building", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               
                    @*@Html.DropDownList("Building", "Select Building")*@
               
                @Html.DropDownList("Building", null, htmlAttributes: new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Did incident involove a member of the public?", htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.LabelFor(model => model.StaffIncident, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.StaffIncident)
                    @Html.ValidationMessageFor(model => model.StaffIncident, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Did incident occur whilst on a home visit?", htmlAttributes: new { @class = "control-label col-md-2" })
            @*@Html.LabelFor(model => model.HomeVisitIncident, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HomeVisitIncident)
                    @Html.ValidationMessageFor(model => model.HomeVisitIncident, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BriefDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BriefDesc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BriefDesc, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateOccurred, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateOccurred, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateOccurred, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.StaffId, "StaffId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("StaffId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StaffId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#Region").change(function () {
                $("#Building").empty();

                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBuildings")',
                    dataType: 'json',
                    data: { region: $("#Region").val() },
                    success: function (buildingList) {

                        $.each(buildingList, function (i, locale) {
                            $("#Building").append('<option value ="'
                            + locale.LocationId + '">'
                                + locale.Building + ' </option>');
                        });
                    },
                    error: function (ex) {
                        alert('Failed' + ex);
                    }
                });
                return false;
            })
        });
    </script>
}